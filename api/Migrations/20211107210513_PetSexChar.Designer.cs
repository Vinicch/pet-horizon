// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apifmu.Data;

namespace apifmu.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211107210513_PetSexChar")]
    partial class PetSexChar
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("apifmu.Models.Adoption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DisapprovalReason")
                        .HasColumnType("longtext");

                    b.Property<int>("OngId")
                        .HasColumnType("int");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.Property<string>("Situation")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Adoption");
                });

            modelBuilder.Entity("apifmu.Models.Ong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<double>("Lat")
                        .HasColumnType("double");

                    b.Property<double>("Long")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Uin")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Uin")
                        .IsUnique();

                    b.ToTable("Ong");
                });

            modelBuilder.Entity("apifmu.Models.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Breed")
                        .HasColumnType("longtext");

                    b.Property<string>("Color")
                        .HasColumnType("longtext");

                    b.Property<int>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Personality")
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Size")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("WasAdopted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("OngId");

                    b.HasIndex("UserId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("apifmu.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("HasWindowBars")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool?>("HasYard")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Income")
                        .HasColumnType("longtext");

                    b.Property<double>("Lat")
                        .HasColumnType("double");

                    b.Property<double>("Long")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("OngId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("Residence")
                        .HasColumnType("longtext");

                    b.Property<string>("ResidenceSize")
                        .HasColumnType("longtext");

                    b.Property<string>("Uin")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("OngId");

                    b.HasIndex("Uin")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("apifmu.Models.Adoption", b =>
                {
                    b.HasOne("apifmu.Models.Ong", "Ong")
                        .WithMany()
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apifmu.Models.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apifmu.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ong");

                    b.Navigation("Pet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("apifmu.Models.Pet", b =>
                {
                    b.HasOne("apifmu.Models.Ong", "Ong")
                        .WithMany()
                        .HasForeignKey("OngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apifmu.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Ong");

                    b.Navigation("User");
                });

            modelBuilder.Entity("apifmu.Models.User", b =>
                {
                    b.HasOne("apifmu.Models.Ong", "Ong")
                        .WithMany()
                        .HasForeignKey("OngId");

                    b.Navigation("Ong");
                });
#pragma warning restore 612, 618
        }
    }
}
